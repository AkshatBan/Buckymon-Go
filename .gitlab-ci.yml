stages:
  - build
  - test

variables:
  DOCKER_REGISTRY: "registry.doit.wisc.edu/cdis/cs/courses/cs506/sp2024/team/mondaywednesdaylecture/t_01/buckymon-go"

# Builds containers with code additions and pushes them to container registry
build-frontend:
  stage: build
  image: docker:20.10.17
  services:
    - name: docker:20.10.17-dind
      alias: docker
  tags:
    - dind
    - csl
    - docker
  script:
    - echo "Building the frontend..."
    - docker build -f frontend.dockerfile -t $DOCKER_REGISTRY/frontend:cicd-build .
    - docker login -u gghall -p 'glpat-bNrAsSpJyX5Stkq8dk-y' $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/frontend:cicd-build
    - docker run $DOCKER_REGISTRY/frontend:cicd-build sh -c "npm run"

build-backend:
  stage: build
  image: docker:20.10.17
  services:
    - name: docker:20.10.17-dind
      alias: docker
  tags:
    - dind
    - csl
    - docker
  script:
    - echo "Building the backend..."
    - docker build -f backend.dockerfile -t $DOCKER_REGISTRY/backend:latest .
    - docker login -u gghall -p 'glpat-bNrAsSpJyX5Stkq8dk-y' $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/backend:latest
    # - docker run backend:cicd-build sh -c "python3 Backend.py"

build-database:
  stage: build
  image: docker:20.10.17
  services:
    - name: docker:20.10.17-dind
      alias: docker
  tags:
    - dind
    - csl
    - docker
  script:
    - echo "Building the database..."
    - docker build -f database.dockerfile -t $DOCKER_REGISTRY/database_docker_img:latest .
    - docker login -u gghall -p 'glpat-bNrAsSpJyX5Stkq8dk-y' $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/database_docker_img:latest

# Frontend and Backend Unit Testing
test_frontend:
  stage: test
  image: docker:20.10.17
  services:
    - docker:20.10.17-dind
  tags:
    - dind
    - csl
    - docker
  script:
   - echo "Testing frontend..."
  #  - docker pull frontend:cicd-build
  #  - docker build -f frontend.dockerfile -t frontend:cicd-build .
   - docker login -u gghall -p 'glpat-bNrAsSpJyX5Stkq8dk-y' $DOCKER_REGISTRY

   - docker pull $DOCKER_REGISTRY/frontend:cicd-build
   - docker run $DOCKER_REGISTRY/frontend:cicd-build sh -c "CI=true npm test"


deploy_frontend:
  stage: deploy
  when: on_success
  image: docker:20.10.17
  services:
    - docker:20.10.17-dind
  tags:
    - dind
    - csl
    - docker
  script:
    - echo "Deploying Frontend..."
    - docker login -u gghall -p 'glpat-bNrAsSpJyX5Stkq8dk-y' $DOCKER_REGISTRY
    - docker build -f frontend-deploy.dockerfile -t $DOCKER_REGISTRY/frontend:production .
    - docker push $DOCKER_REGISTRY/frontend:production


# Define job for deploying the application
# deploy:
#   stage: deploy
#   script:
#     - echo "Deploying application..."
#     # Add commands to deploy your application here
#   environment:
#     name: production
#     url: "https://yourapp.com"
#   only:
#     - main
